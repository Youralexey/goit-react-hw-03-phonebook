{"version":3,"sources":["components/Container/Container.styled.jsx","components/Form/Form.styled.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Input/Input.styled.jsx","components/Input/Input.jsx","components/Form/Form.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/App.js","index.js"],"names":["Container","styled","div","Title","h1","SectionTitle","h2","CustomForm","form","CustomButton","button","Button","text","type","onClick","CurrentInput","input","CurrentLabel","label","Input","name","value","pattern","title","onChange","Form","state","number","handleSetInfo","e","target","setState","handleAddContact","preventDefault","props","handleSubmit","reset","onSubmit","this","required","Component","ContactItem","li","ContactListItem","handleDelete","ContactList","contacts","onDeleteContact","map","id","App","filter","formSubmitHandle","contact","uuidv4","find","savedContact","alert","prevState","console","log","contactId","changeFilter","getFilteredContacts","normaliseFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42e8676e.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  width: 400px;\r\n  background-color: #f0f0f0;\r\n  border-radius: 5px;\r\n  padding: 30px;\r\n  margin-left:auto;\r\n  margin-right: auto;\r\n  margin-top:30px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n   display: block;\r\n   font-size: 26px;\r\n   font-weight: 800;\r\n   text-align: center;\r\n   text-transform: uppercase;\r\n   margin-bottom: 10px;\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n   display: block;\r\n   font-size: 20px;\r\n   font-weight: 800;\r\n   text-align: center;\r\n  text-transform: uppercase;\r\n  margin-top:30px;\r\n   margin-bottom:10px;\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const CustomForm = styled.form`\r\npadding: 0px;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const CustomButton = styled.button`\r\n  background-color: #ff6b0a;\r\n  border: none;\r\n  border-radius:5px;\r\n  outline: none;\r\n  padding: 3px 12px;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n`;","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { CustomButton } from \"./Button.styled\";\r\n\r\nfunction Button({ text, type, onClick }) {\r\n  return (\r\n    <CustomButton type={type} onClick={onClick}>\r\n      {text}\r\n    </CustomButton>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CurrentInput = styled.input`\r\ndisplay:block;\r\nmargin-top: 6px;\r\nmargin-bottom: 20px`;\r\n\r\nexport const CurrentLabel = styled.label`\r\ntext-transform:capitalize;\r\nfont-weight:500;`;","import PropTypes from \"prop-types\";\r\nimport { CurrentInput, CurrentLabel } from \"./Input.styled\";\r\n\r\nexport default function Input({\r\n  type,\r\n  name,\r\n  value,\r\n  pattern = null,\r\n  title = null,\r\n  onChange,\r\n}) {\r\n  return (\r\n    <CurrentLabel>\r\n      {name}\r\n      <CurrentInput\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        pattern={pattern}\r\n        title={title}\r\n        onChange={onChange}\r\n      />\r\n    </CurrentLabel>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { CustomForm } from \"./Form.styled\";\r\nimport Button from \"../Button/Button\";\r\nimport Input from \"../Input/Input\";\r\n\r\nimport { Component } from \"react\";\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleSetInfo = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n    //   console.log(this.state);\r\n  };\r\n\r\n  handleAddContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.handleSubmit(this.state);\r\n    // console.log('Стейт формы>', this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\"});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CustomForm onSubmit={this.handleAddContact}>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={this.handleSetInfo}\r\n        />\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={this.handleSetInfo}\r\n        />\r\n        <Button type=\"submit\" text=\"Add contact\" />\r\n      </CustomForm>\r\n    );\r\n  }\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ContactItem = styled.li`\r\n   display: flex;\r\n   justify-content: space-between;\r\n    &:not(:last-child){\r\n        margin-bottom: 8px;\r\n    }\r\n`;","import PropTypes from \"prop-types\";\r\nimport { ContactItem } from \"./ContactListItem.styled\";\r\nimport Button from \"../Button/Button\";\r\n\r\nexport default function ContactListItem({ name, number, handleDelete }) {\r\n  return (\r\n    <ContactItem>\r\n      {name} : {number}\r\n      <Button type=\"button\" text=\"delete\" onClick={handleDelete} />\r\n    </ContactItem>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          handleDelete={() => onDeleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  Container,\n  Title,\n  SectionTitle,\n} from \"./Container/Container.styled.jsx\";\nimport Form from \"./Form/Form.jsx\";\nimport ContactList from \"./ContactList/ContactList.jsx\";\nimport Input from \"./Input/Input.jsx\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  formSubmitHandle = ({ name, number }) => {\n    const contact = { name, number, id: uuidv4() };\n\n    this.state.contacts.find((savedContact) => savedContact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : this.setState((prevState) => ({\n          contacts: [...prevState.contacts, contact],\n        }));\n    console.log(contact);\n  };\n\n  handleDelete = (contactId) => {\n    console.log(contactId);\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normaliseFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normaliseFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <Container>\n        <Title>Phonebook</Title>\n        <Form handleSubmit={this.formSubmitHandle} />\n        <SectionTitle>Contacts</SectionTitle>\n        <Input\n          name=\"Find contacts by name\"\n          type=\"text\"\n          value={filter}\n          onChange={this.changeFilter}\n        />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.handleDelete}\n        />\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}